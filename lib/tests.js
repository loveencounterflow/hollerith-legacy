(function() {
  var $, BYTEWISE, CND, D, HOLLERITH, after, alert, badge, db, debug, echo, help, info, join, log, njs_path, rpr, step, suspend, test, urge, warn, whisper,
    slice = [].slice;

  njs_path = require('path');

  join = njs_path.join;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'HOLLERITH/tests';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  suspend = require('coffeenode-suspend');

  step = suspend.step;

  after = suspend.after;

  test = require('guy-test');

  D = require('pipedreams2');

  $ = D.remit.bind(D);

  HOLLERITH = require('./main');

  db = null;

  BYTEWISE = require('bytewise');

  this._encode_list = function(list) {
    var i, idx, len, value;
    for (idx = i = 0, len = list.length; i < len; idx = ++i) {
      value = list[idx];
      list[idx] = BYTEWISE.encode(value);
    }
    return list;
  };

  this._decode_list = function(list) {
    var i, idx, len, value;
    for (idx = i = 0, len = list.length; i < len; idx = ++i) {
      value = list[idx];
      list[idx] = BYTEWISE.decode(value);
    }
    return list;
  };

  this._sort_list = function(list) {
    this._encode_list(list);
    list.sort(Buffer.compare);
    this._decode_list(list);
    return list;
  };

  this._feed_test_data = function(db, probes_idx, handler) {
    switch (probes_idx) {
      case 0:
        step((function(_this) {
          return function*(resume) {
            var i, input, key, len, probe, ref;
            (yield HOLLERITH.clear(db, resume));
            input = D.create_throughstream();
            input.pipe(HOLLERITH.$write(db, 3)).pipe(D.$on_end(function() {
              urge("test data written");
              return handler(null);
            }));
            ref = _this._feed_test_data.probes[probes_idx];
            for (i = 0, len = ref.length; i < len; i++) {
              probe = ref[i];
              key = HOLLERITH.new_so_key.apply(HOLLERITH, [db].concat(slice.call(probe)));
              input.write(key);
            }
            return input.end();
          };
        })(this));
        break;
      case 1:
        step((function(_this) {
          return function*(resume) {
            var i, input, key, len, ref, url_key;
            (yield HOLLERITH.clear(db, resume));
            input = D.create_throughstream();
            input.pipe(HOLLERITH.$write(db, 3)).pipe(D.$on_end(function() {
              urge("test data written");
              return handler(null);
            }));
            ref = _this._feed_test_data.probes[probes_idx];
            for (i = 0, len = ref.length; i < len; i++) {
              url_key = ref[i];
              key = HOLLERITH.key_from_url(db, url_key);
              input.write(key);
            }
            return input.end();
          };
        })(this));
        break;
      default:
        return handler(new Error("illegal probes index " + (rpr(probes_idx))));
    }
    return null;
  };

  this._feed_test_data.probes = [];

  this._feed_test_data.probes.push([['glyph', '嗐', 'components', 2000], ['glyph', '嗐', 'reading', 2000], ['glyph', '嗐', 'strokeorder', 2000], ['glyph', '嗑', 'components', 2001], ['glyph', '嗑', 'reading', 2001], ['glyph', '嗑', 'strokeorder', 2001], ['glyph', '嗒', 'components', 2002], ['glyph', '嗒', 'reading', 2002], ['glyph', '嗒', 'strokeorder', 2002], ['glyph', '嗓', 'components', 2003], ['glyph', '嗓', 'reading', 2003], ['glyph', '嗓', 'strokeorder', 2003], ['glyph', '嗔', 'components', 2004], ['glyph', '嗔', 'reading', 2004], ['glyph', '嗔', 'strokeorder', 2004]]);

  this._feed_test_data.probes.push(['so|glyph:劬|cp/fncr:u-cjk/52ac|0', 'so|glyph:邭|cp/fncr:u-cjk/90ad|0', 'so|glyph:𠴦|cp/fncr:u-cjk-xb/20d26|0', 'so|glyph:𤿯|cp/fncr:u-cjk-xb/24fef|0', 'so|glyph:𧑴|cp/fncr:u-cjk-xb/27474|0', 'so|glyph:𨒡|cp/fncr:u-cjk-xb/284a1|0', 'so|glyph:𪚧|cp/fncr:u-cjk-xb/2a6a7|0', 'so|glyph:𪚫|cp/fncr:u-cjk-xb/2a6ab|0', 'so|glyph:𤿯|strokeorder:352513553254|0', 'so|glyph:𠴦|strokeorder:3525141121|0', 'so|glyph:𨒡|strokeorder:35251454|0', 'so|glyph:邭|strokeorder:3525152|0', 'so|glyph:𪚫|strokeorder:352515251115115113541|0', 'so|glyph:𪚧|strokeorder:35251525112511511|0', 'so|glyph:𧑴|strokeorder:352515251214251214|0', 'so|glyph:劬|strokeorder:3525153|0']);

  this["keys 0"] = function(T, done) {
    var key_0, key_1, matcher;
    key_0 = HOLLERITH.new_key(db, 'so', 'glyph', '家', 'strokeorder', '4451353334');
    key_1 = HOLLERITH.new_so_key(db, 'glyph', '家', 'strokeorder', '4451353334');
    matcher = ['so', 'glyph', '家', 'strokeorder', '4451353334', 0];
    T.eq(key_0, matcher);
    T.eq(key_1, key_0);
    return done();
  };

  this["keys 1"] = function(T, done) {
    var ok, os_key_0, os_key_1, ov, ref, ref1, sk, so_key_0, so_key_1, sv;
    ref = ['glyph', '家', 'strokeorder', '4451353334'], sk = ref[0], sv = ref[1], ok = ref[2], ov = ref[3];
    ref1 = HOLLERITH.new_keys(db, 'so', sk, sv, ok, ov), so_key_0 = ref1[0], os_key_0 = ref1[1];
    so_key_1 = HOLLERITH.new_so_key(db, sk, sv, ok, ov);
    os_key_1 = HOLLERITH.new_os_key(db, sk, sv, ok, ov);
    T.eq(so_key_0, so_key_1);
    T.eq(os_key_0, os_key_1);
    return done();
  };

  this["keys 2"] = function(T, done) {
    var idx_0, idx_1, ok_0, ok_1, ov_0, ov_1, ref, ref1, sk_0, sk_1, so_key_0, sv_0, sv_1, t_0, t_1;
    ref = ['so', 'glyph', '家', 'strokeorder', '4451353334', 0], t_0 = ref[0], sk_0 = ref[1], sv_0 = ref[2], ok_0 = ref[3], ov_0 = ref[4], idx_0 = ref[5];
    so_key_0 = HOLLERITH.new_key(db, t_0, sk_0, sv_0, ok_0, ov_0, idx_0);
    ref1 = HOLLERITH.normalize_key(db, so_key_0), t_1 = ref1[0], sk_1 = ref1[1], sv_1 = ref1[2], ok_1 = ref1[3], ov_1 = ref1[4], idx_1 = ref1[5];
    T.eq([t_0, sk_0, sv_0, ok_0, ov_0, idx_0], [t_1, sk_1, sv_1, ok_1, ov_1, idx_1]);
    return done();
  };

  this["ordering and value recovery 0"] = function(T, done) {
    var i, idx, len, matchers, ok, ov, probe, probes_idx, ref, sk, sv;
    matchers = [];
    probes_idx = 0;
    ref = this._feed_test_data.probes[probes_idx];
    for (i = 0, len = ref.length; i < len; i++) {
      probe = ref[i];
      sk = probe[0], sv = probe[1], ok = probe[2], ov = probe[3];
      matchers.push(['os', ok, ov, sk, sv, 0]);
      matchers.push(['so', sk, sv, ok, ov, 0]);
    }
    this._sort_list(matchers);
    idx = -1;
    return step((function(_this) {
      return function*(resume) {
        var input;
        (yield _this._feed_test_data(db, probes_idx, resume));
        input = db['%self'].createKeyStream();
        return input.pipe($(function(key, send) {
          key = BYTEWISE.decode(key);
          idx += +1;
          return T.eq(key, matchers[idx]);
        })).pipe(D.$on_end(function() {
          return done();
        }));
      };
    })(this));
  };

  this["ordering and value recovery 1"] = function(T, done) {
    var idx, matchers, probes_idx;
    probes_idx = 1;
    matchers = ['os|cp/fncr:u-cjk-xb/20d26|glyph:𠴦|0', 'os|cp/fncr:u-cjk-xb/24fef|glyph:𤿯|0', 'os|cp/fncr:u-cjk-xb/27474|glyph:𧑴|0', 'os|cp/fncr:u-cjk-xb/284a1|glyph:𨒡|0', 'os|cp/fncr:u-cjk-xb/2a6a7|glyph:𪚧|0', 'os|cp/fncr:u-cjk-xb/2a6ab|glyph:𪚫|0', 'os|cp/fncr:u-cjk/52ac|glyph:劬|0', 'os|cp/fncr:u-cjk/90ad|glyph:邭|0', 'os|strokeorder:352513553254|glyph:𤿯|0', 'os|strokeorder:3525141121|glyph:𠴦|0', 'os|strokeorder:35251454|glyph:𨒡|0', 'os|strokeorder:3525152|glyph:邭|0', 'os|strokeorder:352515251115115113541|glyph:𪚫|0', 'os|strokeorder:35251525112511511|glyph:𪚧|0', 'os|strokeorder:352515251214251214|glyph:𧑴|0', 'os|strokeorder:3525153|glyph:劬|0', 'so|glyph:劬|cp/fncr:u-cjk/52ac|0', 'so|glyph:劬|strokeorder:3525153|0', 'so|glyph:邭|cp/fncr:u-cjk/90ad|0', 'so|glyph:邭|strokeorder:3525152|0', 'so|glyph:𠴦|cp/fncr:u-cjk-xb/20d26|0', 'so|glyph:𠴦|strokeorder:3525141121|0', 'so|glyph:𤿯|cp/fncr:u-cjk-xb/24fef|0', 'so|glyph:𤿯|strokeorder:352513553254|0', 'so|glyph:𧑴|cp/fncr:u-cjk-xb/27474|0', 'so|glyph:𧑴|strokeorder:352515251214251214|0', 'so|glyph:𨒡|cp/fncr:u-cjk-xb/284a1|0', 'so|glyph:𨒡|strokeorder:35251454|0', 'so|glyph:𪚧|cp/fncr:u-cjk-xb/2a6a7|0', 'so|glyph:𪚧|strokeorder:35251525112511511|0', 'so|glyph:𪚫|cp/fncr:u-cjk-xb/2a6ab|0', 'so|glyph:𪚫|strokeorder:352515251115115113541|0'];
    idx = -1;
    return step((function(_this) {
      return function*(resume) {
        var input;
        (yield _this._feed_test_data(db, probes_idx, resume));
        input = HOLLERITH.read(db);
        return input.pipe(HOLLERITH.$url_from_key(db)).pipe($(function(key, send) {
          idx += +1;
          return T.eq(key, matchers[idx]);
        })).pipe(D.$on_end(function() {
          return done();
        }));
      };
    })(this));
  };

  this["prefixes and searching 0"] = function(T, done) {
    var idx, matchers, probes_idx;
    matchers = [];
    probes_idx = 1;
    matchers = ['os|strokeorder:3525141121|glyph:𠴦|0', 'os|strokeorder:35251454|glyph:𨒡|0'];
    idx = -1;
    return step((function(_this) {
      return function*(resume) {
        var input, query;
        (yield _this._feed_test_data(db, probes_idx, resume));
        query = HOLLERITH.new_query(db, ['os', 'strokeorder', '352514']);
        input = db['%self'].createKeyStream(query);
        return input.pipe($(function(bkey, send) {
          var url;
          url = HOLLERITH.url_from_key(db, HOLLERITH._decode(db, bkey));
          idx += +1;
          return T.eq(url, matchers[idx]);
        })).pipe(D.$on_end(function() {
          T.eq(idx, 1);
          return done();
        }));
      };
    })(this));
  };

  this["prefixes and searching 1"] = function(T, done) {
    var idx, matchers, probes_idx;
    matchers = [];
    probes_idx = 1;
    matchers = ['os|strokeorder:3525141121|glyph:𠴦|0', 'os|strokeorder:35251454|glyph:𨒡|0'];
    idx = -1;
    return step((function(_this) {
      return function*(resume) {
        var input;
        (yield _this._feed_test_data(db, probes_idx, resume));
        return input = HOLLERITH.read(db, ['os', 'strokeorder', '352514']).pipe(HOLLERITH.$url_from_key(db)).pipe(D.$show()).pipe($(function(url, send) {
          idx += +1;
          return T.eq(url, matchers[idx]);
        })).pipe(D.$on_end(function() {
          T.eq(idx, 1);
          return done();
        }));
      };
    })(this));
  };

  this["_ordering"] = function(T, done) {
    var hi, lines, lo, probe, probes;
    hi = void 0;
    lo = null;
    probes = [['x', '<3525135>'], ['x', '<3525141121>'], ['x', '<35251454>'], ['x', '<3525152>'], ['x', '<352515251>'], ['x', '<3525152511>'], ['x', '<3525153>'], ['x', +Infinity], ['x', -Infinity], ['x', 42], ['x', -42], ['x', 'a'], ['x', 'z'], ['x', '中'], ['x', '\uffff'], ['x', '𠂝'], ['os', 'ok'], ['os', 'ok', 'ov'], ['os', 'ok*'], ['os', 'ok', 'ov*']];
    this._sort_list(probes);
    lines = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = probes.length; i < len; i++) {
        probe = probes[i];
        results.push([CND.green(probe), CND.grey(BYTEWISE.encode(probe))]);
      }
      return results;
    })();
    return log((require('columnify'))(lines));
  };

  this._main = function(handler) {
    db = HOLLERITH.new_db(join(__dirname, '..', 'dbs/tests'));
    return test(this, {
      'timeout': 2500
    });
  };

  if (module.parent == null) {
    this._main();
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,